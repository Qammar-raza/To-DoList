{"ast":null,"code":"var _jsxFileName = \"/home/spy-maker/Desktop/mportal/front-ends/src/App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\nimport \"./App.css\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [val, setVal] = useState('');\n  useEffect(() => {\n    loadTasks();\n  }, [items]);\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      let newItems = [...items];\n      newItems = resData.tasks.map(t => t);\n      setItems(newItems);\n    });\n  };\n\n  const inputChangeHandler = e => {\n    setVal(e.target.value);\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (val !== \"\") {\n      fetch('/tasks/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: val\n        })\n      }).then(res => {\n        return res.json();\n      }).then(resData => {\n        console.log(resData.task);\n        const newItem = {\n          taskText: resData.task.taskText,\n          key: resData.task._id\n        };\n        let updatedItems = [...items];\n        updatedItems.push(newItem);\n        setItems(updatedItems);\n        setVal(\"\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const deleteItem = taskindex => {\n    console.log(taskindex);\n    let taskId = items[taskindex]._id;\n    fetch(\"/tasks/delete/\" + taskId, {\n      method: 'DELETE'\n    }).then(res => {\n      return res.json();\n    }).then(result => {\n      console.log(result.message);\n      const index = items.findIndex(task => task._id === taskId);\n      console.log('index of deleted task is : ' + index);\n      const newItems = [...items];\n      const updatedItems = newItems.filter(item => item._id !== taskId);\n      console.log(updatedItems);\n      setItems(updatedItems);\n    });\n  };\n\n  const editItem = taskindex => {\n    // console.log(taskindex);\n    let taskId = items[taskindex]._id;\n    console.log(taskId);\n    let taskText = items[taskindex].taskText;\n    setVal(taskText);\n    fetch(\"/tasks/delete/\" + taskId, {\n      method: 'PUT',\n      body: JSON.stringify({\n        text: val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"so\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"TodoList \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"grid-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: createTask,\n    className: \"form\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"task\",\n    value: val,\n    placeholder: \"Add Task\",\n    onChange: e => inputChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), \"Add Task\")))), /*#__PURE__*/React.createElement(TodoItems, {\n    entries: items,\n    delete: deleteItem,\n    edit: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spy-maker/Desktop/mportal/front-ends/src/App.js"],"names":["React","Fragment","useState","useEffect","Form","Icon","Grid","TodoItems","App","items","setItems","val","setVal","loadTasks","fetch","method","headers","then","res","json","resData","newItems","tasks","map","t","inputChangeHandler","e","target","value","createTask","preventDefault","body","JSON","stringify","text","console","log","task","newItem","taskText","key","_id","updatedItems","push","catch","err","deleteItem","taskindex","taskId","result","message","index","findIndex","filter","item","editItem"],"mappings":"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","sourcesContent":["import React, { Fragment,useState ,useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\nimport \"./App.css\";\n\n\nfunction App() {\n  const [items , setItems] = useState([])\n  const [val , setVal] = useState('');\n  useEffect(()=>{\n    loadTasks();\n  } ,[items])\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks' ,{method : 'GET' , headers : {\n      'Content-Type': 'application/json'\n    }}).then(res => {\n      return res.json()\n    }).then(resData => {\n      let newItems = [...items];\n      newItems =  resData.tasks.map(t => t);\n      setItems(newItems);\n    })\n  }\n\n  const inputChangeHandler = (e) => {\n    setVal(e.target.value);\n  }\n\n  const createTask = (e) => {\n    e.preventDefault();\n    if(val !== \"\"){\n      fetch('/tasks/add' ,  {method : 'POST' ,headers : {\n        'Content-Type': 'application/json'\n      }, body : JSON.stringify({\n        text : val\n      })}).then(res => {\n        return res.json();\n      }).then(resData => {\n          console.log(resData.task);\n          const newItem ={\n            taskText : resData.task.taskText,\n            key : resData.task._id\n          }\n          let updatedItems = [...items];\n          updatedItems.push(newItem);\n          setItems(updatedItems);\n          setVal(\"\");\n      }).catch(err=>{\n        console.log(err)\n      })\n    }\n  }\n\n  const deleteItem = (taskindex) =>{\n    console.log(taskindex);\n    let taskId = items[taskindex]._id;\n    fetch(\"/tasks/delete/\" + taskId ,\n      {\n        method : 'DELETE' \n      }).then(res => {\n\n        return res.json()\n      }).then(result => {\n        console.log(result.message);\n        const index = items.findIndex(task => task._id === taskId);\n        console.log('index of deleted task is : ' + index);\n        const newItems = [...items];\n        const updatedItems = newItems.filter(item => item._id !== taskId);\n        console.log(updatedItems);\n        setItems(updatedItems);\n      })\n  }\n\n  const editItem = (taskindex) => {\n    // console.log(taskindex);\n    let taskId = items[taskindex]._id\n    console.log(taskId);\n    let taskText = items[taskindex].taskText;\n    setVal(taskText);\n    fetch(\"/tasks/delete/\" + taskId , \n      {method : 'PUT',\n      body : JSON.stringify({text : val}),\n      headers : {'Content-Type': 'application/json'}})\n  }\n\n\n  return (\n    <Fragment>\n\n      \n      <nav>\n        <div className=\"logo\">\n          <h2 className=\"so\">TodoList </h2>\n          <ul className=\"left\">\n\n          </ul>\n        </div>\n        \n      </nav>\n      <div className=\"bf\">\n        <Grid textAlign=\"center\" >\n          <Grid.Column className=\"grid-width\" >\n            <Form onSubmit={createTask} className=\"form\"  size=\"large\">\n              <Form.Input name=\"task\" value={val}  placeholder=\"Add Task\" onChange={(e)=>inputChangeHandler(e)} required/>\n              <Form.Button  color=\"green\" inverted onClick={createTask}>\n                <Icon name=\"checkmark\"/>Add Task\n              </Form.Button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <TodoItems entries={items} delete={deleteItem} edit={editItem}/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}