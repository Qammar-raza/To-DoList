{"ast":null,"code":"var _jsxFileName = \"/home/spy-maker/Desktop/mportal/front-ends/src/App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\nimport \"./App.css\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [val, setVal] = useState('');\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      const something = [...items];\n      console.log(something);\n      const newArray = resData.tasks.map(task => something.push(task));\n      console.log(newArray); // setItems(items.concat(resData.tasks));\n      // console.log(resData);\n      // setItems(resData.tasks.forEach(task => ))\n    });\n  };\n\n  const inputChangeHandler = e => {\n    setVal(e.target.value);\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (val !== \"\") {\n      fetch('/tasks/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: val\n        })\n      }).then(res => {\n        return res.json();\n      }).then(resData => {\n        const newItem = {\n          taskText: resData.task.taskText,\n          key: resData.task._id\n        };\n        const something = [...items, items.push(newItem)];\n        setItems(something);\n        setVal(\"\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const deleteItem = (e, taskId) => {\n    // e.preventDefault();\n    console.log(taskId);\n    fetch(\"/tasks/delete/\" + taskId, {\n      method: 'DELETE'\n    }).then(res => {\n      return res.json();\n    }).then(result => {\n      console.log(result.message);\n      loadTasks();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"so\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"TodoList \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"grid-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: createTask,\n    className: \"form\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"task\",\n    value: val,\n    placeholder: \"Add Task\",\n    onChange: e => inputChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), \"Add Task\")))), /*#__PURE__*/React.createElement(TodoItems, {\n    entries: items,\n    delete: deleteItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spy-maker/Desktop/mportal/front-ends/src/App.js"],"names":["React","Fragment","useState","useEffect","Form","Icon","Grid","TodoItems","App","items","setItems","val","setVal","loadTasks","fetch","method","headers","then","res","json","resData","something","console","log","newArray","tasks","map","task","push","inputChangeHandler","e","target","value","createTask","preventDefault","body","JSON","stringify","text","newItem","taskText","key","_id","catch","err","deleteItem","taskId","result","message"],"mappings":"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","sourcesContent":["import React, { Fragment,useState ,useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\nimport \"./App.css\";\n\n\nfunction App() {\n  const [items , setItems] = useState([])\n  const [val , setVal] = useState('');\n  useEffect(()=>{\n    loadTasks();\n  } ,[])\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks' ,{method : 'GET' , headers : {\n      'Content-Type': 'application/json'\n    }}).then(res => {\n      return res.json()\n    }).then(resData => {\n      const something = [...items];\n      console.log(something);\n      const newArray = resData.tasks.map(task => something.push(task));\n      console.log(newArray);\n      // setItems(items.concat(resData.tasks));\n      // console.log(resData);\n      // setItems(resData.tasks.forEach(task => ))\n    })\n  }\n\n  const inputChangeHandler = (e) => {\n    setVal(e.target.value);\n  }\n\n  const createTask = (e) => {\n    e.preventDefault();\n    if(val !== \"\"){\n      fetch('/tasks/add' ,  {method : 'POST' ,headers : {\n        'Content-Type': 'application/json'\n      }, body : JSON.stringify({\n        text : val\n      })}).then(res => {\n        return res.json();\n      }).then(resData => {\n          const newItem ={\n            taskText : resData.task.taskText,\n            key : resData.task._id\n          }\n          const something = [...items , items.push(newItem)];\n          setItems(something);\n          setVal(\"\");\n      }).catch(err=>{\n        console.log(err)\n      })\n    }\n  }\n\n  const deleteItem = (e,taskId) =>{\n    // e.preventDefault();\n    console.log(taskId);\n    fetch(\"/tasks/delete/\" + taskId ,\n      {\n        method : 'DELETE' \n      }).then(res => {\n\n        return res.json()\n      }).then(result => {\n        console.log(result.message);\n        loadTasks();\n      })\n  }\n\n\n  return (\n    <Fragment>\n\n      \n      <nav>\n        <div className=\"logo\">\n          <h2 className=\"so\">TodoList </h2>\n          <ul className=\"left\">\n\n          </ul>\n        </div>\n        \n      </nav>\n      <div className=\"bf\">\n        <Grid textAlign=\"center\" >\n          <Grid.Column className=\"grid-width\" >\n            <Form onSubmit={createTask} className=\"form\"  size=\"large\">\n              <Form.Input name=\"task\" value={val}  placeholder=\"Add Task\" onChange={(e)=>inputChangeHandler(e)} required/>\n              <Form.Button  color=\"green\" inverted onClick={createTask}>\n                <Icon name=\"checkmark\"/>Add Task\n              </Form.Button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <TodoItems entries={items} delete={deleteItem}/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}