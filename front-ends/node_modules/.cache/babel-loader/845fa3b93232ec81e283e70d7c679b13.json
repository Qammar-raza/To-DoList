{"ast":null,"code":"var _jsxFileName = \"/home/spy-maker/Desktop/mportal/front-ends/src/App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems'; // import Navbar from './NavBar/Navbar';\n\nimport \"./App.css\"; // import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [val, setVal] = useState('');\n  useEffect(() => {\n    fetch('/tasks/getTasks');\n  }, []);\n\n  const addTask = e => {\n    e.preventDefault();\n    const newItem = {\n      text: val,\n      key: new Date()\n    };\n    setItems(items.concat(newItem));\n    console.log('Form is submitted');\n    setVal(\"\");\n  };\n\n  const inputChangeHandler = e => {\n    setVal(e.target.value);\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (val !== \"\") {\n      console.log(val);\n      fetch('/tasks/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: val\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"so\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"TodoList \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"grid-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addTask,\n    className: \"form\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"task\",\n    value: val,\n    placeholder: \"Add Task\",\n    onChange: e => inputChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), \"Add Task\")))), /*#__PURE__*/React.createElement(TodoItems, {\n    entries: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spy-maker/Desktop/mportal/front-ends/src/App.js"],"names":["React","Fragment","useState","useEffect","Form","Icon","Grid","TodoItems","App","items","setItems","val","setVal","fetch","addTask","e","preventDefault","newItem","text","key","Date","concat","console","log","inputChangeHandler","target","value","createTask","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Fragment,useState ,useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\n// import Navbar from './NavBar/Navbar';\nimport \"./App.css\";\n// import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items , setItems] = useState([])\n  const [val , setVal] = useState('');\n  useEffect(()=>{\n    fetch('/tasks/getTasks')\n  } ,[])\n\n\n  const addTask = (e) => {\n    e.preventDefault();\n    \n    const newItem ={\n      text : val,\n      key : new Date()\n    }\n    setItems(items.concat(newItem));\n    console.log('Form is submitted');\n    setVal(\"\");\n  }\n  const inputChangeHandler = (e) => {\n    setVal(e.target.value);\n  }\n\n  const createTask = (e) => {\n    e.preventDefault();\n    if(val !== \"\"){\n      console.log(val);\n      fetch('/tasks/add' ,  {method : 'POST' ,headers : {\n        'Content-Type': 'application/json'\n      }, body : JSON.stringify({\n        text : val\n      })});\n    }\n  }\n\n\n  return (\n    <Fragment>\n      {/* <Navbbar /> */}\n      \n      <nav>\n        <div className=\"logo\">\n          <h2 className=\"so\">TodoList </h2>\n          <ul className=\"left\">\n\n          </ul>\n        </div>\n        \n      </nav>\n      <div className=\"bf\">\n        <Grid textAlign=\"center\" >\n          <Grid.Column className=\"grid-width\" >\n            <Form onSubmit={addTask} className=\"form\"  size=\"large\">\n              <Form.Input name=\"task\" value={val}  placeholder=\"Add Task\" onChange={(e)=>inputChangeHandler(e)} required/>\n              <Form.Button  color=\"green\" inverted onClick={createTask}>\n                <Icon name=\"checkmark\"/>Add Task\n              </Form.Button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <TodoItems entries={items}/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}