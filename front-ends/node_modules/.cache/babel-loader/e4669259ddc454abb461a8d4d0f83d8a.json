{"ast":null,"code":"var _jsxFileName = \"/home/spy-maker/Desktop/mportal/front-ends/src/App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems'; // import Navbar from './NavBar/Navbar';\n\nimport \"./App.css\"; // import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [val, setVal] = useState('');\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      setItems(items.concat(resData.tasks));\n    });\n  }; // const addTask = (e) => {\n  //   e.preventDefault();\n  //   const newItem ={\n  //     text : val,\n  //     key : new Date()\n  //   }\n  //   setItems(items.concat(newItem));\n  //   console.log('Form is submitted');\n  //   setVal(\"\");\n  // }\n\n\n  const inputChangeHandler = e => {\n    setVal(e.target.value);\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (val !== \"\") {\n      console.log(val);\n      fetch('/tasks/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: val\n        })\n      }).then(result => {\n        return result.json();\n      }).then(res => {\n        console.log('result coming');\n\n        if (res.status === 200) {\n          console.log('result came');\n          const newItem = {\n            text: val,\n            key: res.task._id\n          };\n          console.log('Element should appear');\n          setItems(items.concat(newItem));\n          setVal(\"\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"so\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"TodoList \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"grid-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: createTask,\n    className: \"form\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"task\",\n    value: val,\n    placeholder: \"Add Task\",\n    onChange: e => inputChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), \"Add Task\")))), /*#__PURE__*/React.createElement(TodoItems, {\n    entries: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spy-maker/Desktop/mportal/front-ends/src/App.js"],"names":["React","Fragment","useState","useEffect","Form","Icon","Grid","TodoItems","App","items","setItems","val","setVal","loadTasks","fetch","method","headers","then","res","json","resData","concat","tasks","inputChangeHandler","e","target","value","createTask","preventDefault","console","log","body","JSON","stringify","text","result","status","newItem","key","task","_id","catch","err"],"mappings":"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","sourcesContent":["import React, { Fragment,useState ,useEffect } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\n// import Navbar from './NavBar/Navbar';\nimport \"./App.css\";\n// import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items , setItems] = useState([])\n  const [val , setVal] = useState('');\n  useEffect(()=>{\n    loadTasks();\n  } ,[])\n\n  const loadTasks = () => {\n    fetch('/tasks/getTasks' ,{method : 'GET' , headers : {\n      'Content-Type': 'application/json'\n    }}).then(res => {\n      return res.json()\n    }).then(resData => {\n      setItems(items.concat(resData.tasks));\n    })\n\n  }\n\n\n  // const addTask = (e) => {\n  //   e.preventDefault();\n    \n  //   const newItem ={\n  //     text : val,\n  //     key : new Date()\n  //   }\n  //   setItems(items.concat(newItem));\n  //   console.log('Form is submitted');\n  //   setVal(\"\");\n  // }\n  const inputChangeHandler = (e) => {\n    setVal(e.target.value);\n  }\n\n  const createTask = (e) => {\n    e.preventDefault();\n    if(val !== \"\"){\n      console.log(val);\n      fetch('/tasks/add' ,  {method : 'POST' ,headers : {\n        'Content-Type': 'application/json'\n      }, body : JSON.stringify({\n        text : val\n      })}).then(result => {\n        return result.json();\n      }).then(res => {\n        console.log('result coming');\n        if(res.status === 200){\n          console.log('result came');\n          const newItem ={\n            text : val,\n            key : res.task._id\n          }\n          console.log('Element should appear')\n          setItems(items.concat(newItem));\n          setVal(\"\");\n        }\n      }).catch(err=>{\n        console.log(err)\n      })\n\n\n    }\n  }\n\n\n  return (\n    <Fragment>\n      {/* <Navbbar /> */}\n      \n      <nav>\n        <div className=\"logo\">\n          <h2 className=\"so\">TodoList </h2>\n          <ul className=\"left\">\n\n          </ul>\n        </div>\n        \n      </nav>\n      <div className=\"bf\">\n        <Grid textAlign=\"center\" >\n          <Grid.Column className=\"grid-width\" >\n            <Form onSubmit={createTask} className=\"form\"  size=\"large\">\n              <Form.Input name=\"task\" value={val}  placeholder=\"Add Task\" onChange={(e)=>inputChangeHandler(e)} required/>\n              <Form.Button  color=\"green\" inverted onClick={createTask}>\n                <Icon name=\"checkmark\"/>Add Task\n              </Form.Button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <TodoItems entries={items}/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}