{"ast":null,"code":"var _jsxFileName = \"/home/spy-maker/Desktop/mportal/front-ends/src/App.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems'; // import Navbar from './NavBar/Navbar';\n\nimport \"./App.css\"; // import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [val, setVal] = useState('');\n\n  const addTask = e => {\n    e.preventDefault();\n    const newItem = {\n      text: val,\n      key: new Date()\n    };\n    setItems(items.concat(newItem));\n    console.log('Form is submitted');\n    setVal(\"\");\n  };\n\n  const inputChangeHandler = e => {\n    setVal(e.target.value);\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (val !== \"\") {\n      console.log(val);\n      fetch('/tasks/add', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: val\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"so\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"TodoList \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"grid-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addTask,\n    className: \"form\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"task\",\n    value: val,\n    placeholder: \"Add Task\",\n    onChange: e => inputChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), \"Add Task\")))), /*#__PURE__*/React.createElement(TodoItems, {\n    entries: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spy-maker/Desktop/mportal/front-ends/src/App.js"],"names":["React","Fragment","useState","Form","Icon","Grid","TodoItems","App","items","setItems","val","setVal","addTask","e","preventDefault","newItem","text","key","Date","concat","console","log","inputChangeHandler","target","value","createTask","fetch","method","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Fragment,useState } from \"react\";\nimport { Form, Icon, Grid } from \"semantic-ui-react\";\nimport TodoItems from './TodoItems/TodoItems';\n// import Navbar from './NavBar/Navbar';\nimport \"./App.css\";\n// import Navbbar from \"./NavBar/Navbar\";\n\nfunction App() {\n  const [items , setItems] = useState([])\n  const [val , setVal] = useState('');\n\n\n  const addTask = (e) => {\n    e.preventDefault();\n    \n    const newItem ={\n      text : val,\n      key : new Date()\n    }\n    setItems(items.concat(newItem));\n    console.log('Form is submitted');\n    setVal(\"\");\n  }\n  const inputChangeHandler = (e) => {\n    setVal(e.target.value);\n  }\n\n  const createTask = (e) => {\n    e.preventDefault();\n    if(val !== \"\"){\n      console.log(val);\n      fetch('/tasks/add' ,  {method : 'POST' , body : JSON.stringify({\n        text : val\n      })});\n    }\n  }\n\n\n  return (\n    <Fragment>\n      {/* <Navbbar /> */}\n      \n      <nav>\n        <div className=\"logo\">\n          <h2 className=\"so\">TodoList </h2>\n          <ul className=\"left\">\n\n          </ul>\n        </div>\n        \n      </nav>\n      <div className=\"bf\">\n        <Grid textAlign=\"center\" >\n          <Grid.Column className=\"grid-width\" >\n            <Form onSubmit={addTask} className=\"form\"  size=\"large\">\n              <Form.Input name=\"task\" value={val}  placeholder=\"Add Task\" onChange={(e)=>inputChangeHandler(e)} required/>\n              <Form.Button  color=\"green\" inverted onClick={createTask}>\n                <Icon name=\"checkmark\"/>Add Task\n              </Form.Button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <TodoItems entries={items}/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}